<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Hadoop学习笔记二</title>
    <link href="/2021/04/15/Hadoop%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/"/>
    <url>/2021/04/15/Hadoop%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/</url>
    
    <content type="html"><![CDATA[<h4 id="客户端代码常见套路"><a href="#客户端代码常见套路" class="headerlink" title="客户端代码常见套路"></a>客户端代码常见套路</h4><p>1.获取一个客户端对象<br>2.执行相关的操作命令<br>3.关闭资源<br>eg: HDFS ZooKeeper</p><h4 id="IDEA技巧"><a href="#IDEA技巧" class="headerlink" title="IDEA技巧"></a>IDEA技巧</h4><p>抛异常：光标放上去后<code>Alt + Enter，↑↓</code><br>提示函数参数：<code>Ctrl + P</code><br>全部格式化：<code>Ctrl + Alt + L</code><br>变量变为属性（全局变量）：<code>Ctrl + Alt + F</code></p><h3 id="slf4j报错"><a href="#slf4j报错" class="headerlink" title="slf4j报错"></a>slf4j报错</h3><p>（未知解决方案）</p>]]></content>
    
    
    
    <tags>
      
      <tag>Hadoop</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VSCode快捷编译</title>
    <link href="/2021/03/21/VSCode%E5%BF%AB%E6%8D%B7%E7%BC%96%E8%AF%91/"/>
    <url>/2021/03/21/VSCode%E5%BF%AB%E6%8D%B7%E7%BC%96%E8%AF%91/</url>
    
    <content type="html"><![CDATA[<p>之前用VSCode的时候，为了编译C++还配置了半天。一个寒假过去不知道咋回事，配置不好使了。<br>正打算再配置一遍，突然发现一个懒狗插件——<code>Code Runner</code></p><p><a href="https://zhuanlan.zhihu.com/p/54861567">贴一个原地址</a></p><p><strong>运行：</strong> Ctrl + Alt + N<br><strong>中止运行：</strong> Ctrl + Alt + M<br><strong>解决乱码 &amp; 输入：</strong><br>选择 文件 -&gt; 首选项 -&gt; 设置，打开VS Code设置页面，找到 Run Code configuration，勾上 Run In Terminal 选项。设置之后，代码就会在 Terminal 中运行了。<br><img src="https://pic4.zhimg.com/80/v2-f893e1b487feee43b5903c9cf2781ffb_720w.jpg"></p>]]></content>
    
    
    
    <tags>
      
      <tag>技术</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>算法课一</title>
    <link href="/2021/03/18/%E7%AE%97%E6%B3%95%E8%AF%BE%E4%B8%80/"/>
    <url>/2021/03/18/%E7%AE%97%E6%B3%95%E8%AF%BE%E4%B8%80/</url>
    
    <content type="html"><![CDATA[<h4 id="鸽子数"><a href="#鸽子数" class="headerlink" title="鸽子数"></a>鸽子数</h4><blockquote><p>鸽子数由以下过程定义：从任何正整数开始，将数字替换为其各个数位的平方和，并重复该过程，直到该数字等于1。如果不能，则这个数字不是鸽子数。<br>例如7是鸽子数，因为7-&gt;49-&gt;97-&gt;130-&gt;10-&gt;1。（7<em>7=49,4</em>4+9<em>9=97,9</em>9+7*7=130….如此类推）<br>显然1是第一个鸽子数。<br>有Q个询问，每个询问给出一个数k，你需要输出第k个鸽子数。<br>Input<br>第一行一个Q，代表询问的个数（Q&lt;=100000）<br>接下来Q行，每行一个数字k（k&lt;150000）<br>Output<br>每行输出一个数，代表第k个鸽子数</p></blockquote><p>首先算了个6，发现会循环：</p><blockquote><p>6 36 117 51 26 40 16 37 56 61</p></blockquote><p>题目中的这个鸽子数就是自身每一位的数字平方相加，一直循环，看看会不会等于1，为1的就是鸽子数。其实基本的方法就是直接打表，然后直接找第k个鸽子数，我的想法也差不多。<br>k的数据范围是150000，那么我们可以让数字的范围开到2000000，可以说在1~2000000（我才没有打表证明）里一定找得到150000个鸽子数，然后1—2000000里每个位数的平方的和最大是为487，也就是1999999的时候，然后我们只要把487以内包括487的所有的鸽子数都标记起来就行，因为每个位数平方和不管怎么循环相加都不可能超过487了都是在487以内，也就是说487之后的数字判断是不是鸽子数只需要算一次各个位数的平方和再放到1—487里去找，如果找到了那这个数也是鸽子数。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;algorithm&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cstring&gt;</span></span><br><span class="hljs-keyword">int</span> a[<span class="hljs-number">500</span>], b[<span class="hljs-number">500005</span>];<br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-built_in">memset</span>(a, <span class="hljs-number">0</span>, <span class="hljs-keyword">sizeof</span>(a));<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= <span class="hljs-number">487</span>; i++)&#123; <span class="hljs-comment">//找487以内的鸽子数</span><br>    <span class="hljs-keyword">int</span> n = i, m, l = <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j = <span class="hljs-number">1</span>; j &lt;= <span class="hljs-number">1000</span>; j++)&#123; <span class="hljs-comment">//这个是各个位数之和，然后循环</span><br>    m = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">while</span>(n)&#123;<br>    m += (n % <span class="hljs-number">10</span>) * (n % <span class="hljs-number">10</span>);<br>    n /= <span class="hljs-number">10</span>;<br>    &#125;<br>    n = m;<br>    <span class="hljs-keyword">if</span>(m == <span class="hljs-number">1</span>)&#123; <span class="hljs-comment">//和为1就标记是鸽子数</span><br>    a[i] = <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">break</span>;<br>&#125;<br>&#125;<br>&#125;<br><span class="hljs-keyword">int</span> ans = <span class="hljs-number">1</span>; <span class="hljs-comment">//用来标记为第几个</span><br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= <span class="hljs-number">500000</span>; i++)&#123; <span class="hljs-comment">//找500000内的鸽子数，将每一个鸽子数是第几个存好</span><br><span class="hljs-keyword">int</span> sum = <span class="hljs-number">0</span>, z = i;<br><span class="hljs-keyword">while</span>(z)&#123;<br>sum += (z % <span class="hljs-number">10</span>) * (z % <span class="hljs-number">10</span>);<br>z /= <span class="hljs-number">10</span>;<br>&#125;<br><span class="hljs-keyword">if</span>(a[sum] == <span class="hljs-number">1</span>)&#123; <span class="hljs-comment">//一次的各个位数的平方和在487内找，是就标记是第几个</span><br>   b[ans++] = i;<br>    &#125;<br>&#125;<br><span class="hljs-keyword">int</span> q, k;<br><span class="hljs-built_in">cin</span> &gt;&gt; q;<br><span class="hljs-keyword">while</span>(q--)&#123;<br><span class="hljs-built_in">cin</span> &gt;&gt; k;<br>    <span class="hljs-built_in">cout</span> &lt;&lt; b[k] &lt;&lt; <span class="hljs-built_in">endl</span>;<br>&#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="Swiches-and-lamps"><a href="#Swiches-and-lamps" class="headerlink" title="Swiches and lamps"></a>Swiches and lamps</h4><blockquote><p>有n个开关和m盏灯，对于一盏灯，只要存在一个控制这个灯的开关是开着的，这个灯就会被点亮。然后给你n×mn×m的01矩阵，如果ii行jj列为1代表开关ii可以控制灯jj，问你能否删掉一个开关，使得所有的灯仍旧能被点亮。</p></blockquote><p>对于每一求和，如果对于某一行，如果去掉某一行后这一列的和会变成0，说明会有灯不受控制，这一行就不能删掉</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cstdio&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;algorithm&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">define</span> maxn 2016</span><br><span class="hljs-keyword">int</span> <span class="hljs-built_in">map</span>[maxn][maxn], sum[maxn], n, m;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++)<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j = <span class="hljs-number">1</span>; j &lt;= m; j++)&#123;<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%1d&quot;</span>, <span class="hljs-built_in">map</span>[i] + j);<br>        sum[j] += <span class="hljs-built_in">map</span>[i][j];<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>, j; i &lt;= n; i++)&#123;<br>        <span class="hljs-keyword">for</span>(j = <span class="hljs-number">1</span>; j &lt;= m; j++)<br>            <span class="hljs-keyword">if</span>(sum[j] - <span class="hljs-built_in">map</span>[i][j] == <span class="hljs-number">0</span>) <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">if</span>(j &gt; m) <span class="hljs-keyword">return</span> <span class="hljs-number">0</span> * <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;YES&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span> * <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;NO&quot;</span>);<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="权力指数"><a href="#权力指数" class="headerlink" title="权力指数"></a>权力指数</h4><blockquote><p>在选举问题中，总共有n个小团体，每个小团体拥有一定数量的选票数。如果其中m个小团体的票数和超过总票数的一半，则此组合为“获胜联盟”。n个团体可形成若干个获胜联盟。一个小团体要成为一个“关键加入者”的条件是：在其所在的获胜联盟中，如果缺少了这个小团体的加入，则此联盟不能成为获胜联盟。一个小团体的权利指数是指：一个小团体在所有获胜联盟中成为“关键加入者”的次数。请你计算每个小团体的权利指数。<br>Input<br>输入数据的第一行为一个正整数T，表示有T组测试数据。每一组测试数据的第一行为一个正整数n（0&lt;n&lt;=20）。第二行有n个正整数，分别表示1到n号小团体的票数。<br>Output<br>对每组测试数据，在同一个行按顺序输出1到n号小团体的权利指数。</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cstdio&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;algorithm&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cstdlib&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;cstring&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> <span class="hljs-built_in">std</span>;<br><span class="hljs-keyword">int</span> n, t, s, a[<span class="hljs-number">21</span>], ans[<span class="hljs-number">21</span>], flag[<span class="hljs-number">21</span>];<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-built_in">cin</span> &gt;&gt; t;<br>    <span class="hljs-keyword">while</span>(t--)&#123;<br>        <span class="hljs-built_in">cin</span> &gt;&gt; n;<br>        s = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++)&#123;<br>            <span class="hljs-built_in">cin</span> &gt;&gt; a[i];<br>            s += a[i];<br>        &#125;<br>        <span class="hljs-built_in">memset</span>(ans, <span class="hljs-number">0</span>, <span class="hljs-keyword">sizeof</span>(ans));<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; (<span class="hljs-number">1</span>&lt;&lt;n); i++)&#123;<br>            <span class="hljs-keyword">int</span> tmp = <span class="hljs-number">0</span>;<br>            <span class="hljs-built_in">memset</span>(flag, <span class="hljs-number">0</span>, <span class="hljs-keyword">sizeof</span>(flag));<br>            <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; n; j++)&#123;<br>                <span class="hljs-keyword">if</span>(i &amp; (<span class="hljs-number">1</span>&lt;&lt;j))&#123;<br>                    tmp += a[j];<span class="hljs-comment">//m个团体的总票数</span><br>                    flag[j] = <span class="hljs-number">1</span>;<span class="hljs-comment">//加一个tmp就标记一下</span><br>                &#125;<br>            &#125;<br>            <span class="hljs-keyword">if</span>(tmp &lt;= s / <span class="hljs-number">2</span>)<span class="hljs-comment">//少一个团体就当不上</span><br>                <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; n; j++)<br>                    <span class="hljs-keyword">if</span>(tmp + a[j] &gt; s/<span class="hljs-number">2</span> &amp;&amp; flag[j] == <span class="hljs-number">0</span>)<span class="hljs-comment">//加上某个团体就当上了，然后当的代码就是flag没有标记的</span><br>                        ans[j]++;<br>        &#125;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt;= n<span class="hljs-number">-2</span>; i++)<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d &quot;</span>,ans[i]);<span class="hljs-comment">//输出格式</span><br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>, ans[n - <span class="hljs-number">1</span>]);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于“SSH服务器拒绝了密码”</title>
    <link href="/2021/03/15/%E5%85%B3%E4%BA%8ESSH%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%8B%92%E7%BB%9D%E4%BA%86%E5%AF%86%E7%A0%81/"/>
    <url>/2021/03/15/%E5%85%B3%E4%BA%8ESSH%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%8B%92%E7%BB%9D%E4%BA%86%E5%AF%86%E7%A0%81/</url>
    
    <content type="html"><![CDATA[<p>今天跟着学Hadoop，Xshell硬是连不上，搜到一个百度经验笑死我了——</p><blockquote><p>…（前面一堆指令）<br>5/7<br>如果走到这一步你发现你的配置并没有哪里错了那么我们就是道友了。。。<br>回到Xshell找到你的虚拟机右键进入属性<br>6/7<br>把大写用户名改成小写，确定<br>7/7<br>连接上了。。。</p></blockquote><p>没想到有人和我一样傻哈哈哈</p>]]></content>
    
    
    
    <tags>
      
      <tag>Hadoop</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hadoop学习笔记一：序及准备</title>
    <link href="/2021/03/14/Hadoop%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80/"/>
    <url>/2021/03/14/Hadoop%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80/</url>
    
    <content type="html"><![CDATA[<p>Hadoop分为<strong>存储</strong>和<strong>计算</strong></p><ul><li>存储：HDFS</li><li>计算：MapReduce</li></ul><h4 id="HDFS文件系统"><a href="#HDFS文件系统" class="headerlink" title="HDFS文件系统"></a>HDFS文件系统</h4><p>HDFS（Hadoop Distributed File System, Hadoop分布式文件系统）<br><strong>NameNode → 多个DataNodes</strong></p><ul><li>NameNode: 文件在哪</li><li>DataNodes: 存数据</li><li>2NN: 负责备份NN</li></ul><h4 id="Yarn架构"><a href="#Yarn架构" class="headerlink" title="Yarn架构"></a>Yarn架构</h4><p>YARN （Yet Another Resource Negotiator，另一种资源协调者）<br><strong>client → RM → NMs</strong></p><ul><li>ResourceManager(RM) : 整个集群资源（CPU, RAM）等的老大</li><li>NodeManager(NM) : 单个节点服务器的老大</li><li>单个节点服务器能虚拟出多个儿子，每个儿子相当于一个小电脑（服务器），称为Container容器，内含ApplicationManager(AM) : 单个任务的老大</li></ul><p><img src="./Hadoop%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80/01.jpg"></p><h4 id="克隆虚拟机"><a href="#克隆虚拟机" class="headerlink" title="克隆虚拟机"></a>克隆虚拟机</h4><p>右键移除并不会真正删掉，可以通过原位置的vmx导入<br>右键管理从磁盘删除才是删掉</p><p>克隆之后，如下操作（直接用root用户登录更方便）：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">vim <span class="hljs-regexp">/etc/</span>sysconfig<span class="hljs-regexp">/network-scripts/i</span>fcfg-ens33<br>vim <span class="hljs-regexp">/etc/</span>hostname<br>reboot<br></code></pre></td></tr></table></figure><p>重启后进行检查</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stylus">ifconfig<br>ping www<span class="hljs-selector-class">.baidu</span>.com<br>hostname<br></code></pre></td></tr></table></figure><p>再在Xshell里导入，并输<code>hostname</code>再次检查</p><h4 id="安装JDK-Hadoop"><a href="#安装JDK-Hadoop" class="headerlink" title="安装JDK Hadoop"></a>安装JDK Hadoop</h4><p>（已经在hadoop100执行了<code>rpm -qa | grep -i java | xargs -n1 rpm -e --nodeps</code>）<br>一般在102安装即可<br>p.s.教程里写的是<br><code>tar -zxvf hadoop-3.1.3.tar.gz -C /opt/module/ </code><br>但是我在操作阿里云的服务器时，不知道为什么总是报错“无法open：没有那个文件或目录”，貌似是它不识别根目录/，用了相对路径之后就好使了。神秘<br>另外，提前cd到module也可以这样：<br><code>tar -zxvf ../software/hadoop-3.1.3.tar.gz</code></p><p>哦哦哦我知道了：</p><blockquote><p>/是文件系统的根目录，/root是超级用户root用户的个人目录<br>我一开始登的时候，是在root下了，还以为是根目录，各种操作也没加/  ……</p></blockquote><h4 id="小技巧"><a href="#小技巧" class="headerlink" title="小技巧"></a>小技巧</h4><ul><li>Xshell双击标签就能再开一个新的</li><li>Ctrl + L可以控制台换一页</li><li>Tab可以控制台智能补全， 也可以查看当前目录文件列表</li><li><code>ssh hostname</code>，<code>exit</code>退出</li><li>查公网IP：<code>curl httpbin.org/ip </code></li></ul><h4 id="配置完全分布"><a href="#配置完全分布" class="headerlink" title="配置完全分布"></a>配置完全分布</h4><p>scp / rsync / xsync</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">存一下xsync脚本</span><br><span class="hljs-meta">#</span><span class="bash">!/bin/bash</span><br><span class="hljs-meta">#</span><span class="bash">1. 判断参数个数</span><br>if [ $# -lt 1 ]<br>then<br>    echo Not Enough Arguement!<br>    exit;<br>fi<br><br><span class="hljs-meta">#</span><span class="bash">2. 遍历集群所有机器</span><br>for host in hadoop102 hadoop103 hadoop104<br>do<br>    echo ==================== $host ====================<br>    #3. 遍历所有目录，挨个发送<br>    for file in $@<br>    do<br>        #4. 判断文件是否存在<br>        if [ -e $file ]<br>        then<br>            #5. 获取父目录 -P取消软链接<br>            pdir=$(cd -P $(dirname $file); pwd)<br>            #6. 获取当前文件的名称<br>            fname=$(basename $file)<br>            #7. -p无视是否已经存在<br>            ssh $host &quot;mkdir -p $pdir&quot;<br>            rsync -av $pdir/$fname $host:$pdir<br>        else<br>            echo $file does not exists!<br>        fi<br>    done<br>done<br></code></pre></td></tr></table></figure><h4 id="配置集群"><a href="#配置集群" class="headerlink" title="配置集群"></a>配置集群</h4><p>core-site.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- 指定 NameNode 的地址 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>fs.defaultFS<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>hdfs://hadoop102:8020<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- 指定 hadoop 数据的存储目录 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>hadoop.tmp.dir<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>/opt/module/hadoop-3.1.3/data<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- 配置 HDFS 网页登录使用的静态用户为 izayoiaster --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>hadoop.http.staticuser.user<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>izayoiaster<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br></code></pre></td></tr></table></figure><p>hdfs-site.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- nn web 端访问地址--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.namenode.http-address<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>hadoop102:9870<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- 2nn web 端访问地址--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.namenode.secondary.http-address<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>hadoop104:9868<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br></code></pre></td></tr></table></figure><p>yarn-site.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- 指定 MR 走 shuffle --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.nodemanager.aux-services<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>mapreduce_shuffle<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- 指定 ResourceManager 的地址--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.resourcemanager.hostname<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>hadoop103<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- 环境变量的继承 --&gt;</span><br>    <span class="hljs-comment">&lt;!-- 尚硅谷的3.1说，这个是3.1的bug，3.2以上的不用写环境变量 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.nodemanager.env-whitelist<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>JAVA_HOME,HADOOP_COMMON_HOME,HADOOP_HDFS_HOME,HADOOP_CONF_DIR,CLASSPATH_PREPEND_DISTCACHE,HADOOP_YARN_HOME,HADOOP_MAPRED_HOME<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br></code></pre></td></tr></table></figure><p>mapred-site.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- 指定 MapReduce 程序运行在 Yarn 上 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>mapreduce.framework.name<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>yarn<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br></code></pre></td></tr></table></figure><p>最后别忘了同步一下<br><code>xsync /opt/module/hadoop3.1.3/etc/hadoop/</code><br>然后在103 104检查一下<br><code>cat /opt/module/hadoop3.1.3/etc/hadoop/core-site.xml </code></p><h4 id="配置历史服务器"><a href="#配置历史服务器" class="headerlink" title="配置历史服务器"></a>配置历史服务器</h4><p>mapred-site.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- 历史服务器内部地址 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>mapreduce.jobhistory.address<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>hadoop102:10020<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- 历史服务器 web 端地址 --&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>mapreduce.jobhistory.webapp.address<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>hadoop102:19888<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br></code></pre></td></tr></table></figure><p>以及 同步一下<br>（在102）启动历史服务器</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ada">mapred <span class="hljs-comment">--daemon start historyserver</span><br>虽然尚硅谷的pdf这么写的，但貌似有时候需要定位到hadoop的bin目录下才行……<br>（虽然那次我是不小心在<span class="hljs-number">103</span>启动了）<br></code></pre></td></tr></table></figure><blockquote><p><em>Daemon是守护神的意思哦</em></p></blockquote><h4 id="配置日志聚集"><a href="#配置日志聚集" class="headerlink" title="配置日志聚集"></a>配置日志聚集</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 开启日志聚集功能 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.log-aggregation-enable<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 设置日志聚集服务器地址 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.log.server.url<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>http://hadoop102:19888/jobhistory/logs<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br><span class="hljs-comment">&lt;!-- 设置日志保留时间为 7 天 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>yarn.log-aggregation.retain-seconds<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>604800<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="集群启停脚本"><a href="#集群启停脚本" class="headerlink" title="集群启停脚本"></a>集群启停脚本</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">!/bin/bash</span><br>if [ $# -lt 1 ]<br>then<br>    echo &quot;No Args Input...&quot;<br>    exit ;<br>fi<br>case $1 in<br>&quot;start&quot;)<br>    echo &quot; =================== 启动 hadoop 集群 ===================&quot;<br>    echo &quot; --------------- 启动 hdfs ---------------&quot;<br>    ssh hadoop102 &quot;/opt/module/hadoop-3.1.3/sbin/start-dfs.sh&quot;<br>    echo &quot; --------------- 启动 yarn ---------------&quot;<br>    ssh hadoop103 &quot;/opt/module/hadoop-3.1.3/sbin/start-yarn.sh&quot;<br>    echo &quot; --------------- 启动 historyserver ---------------&quot;<br>    ssh hadoop102 &quot;/opt/module/hadoop-3.1.3/bin/mapred --daemon start historyserver&quot;<br>;;<br>&quot;stop&quot;)<br>    echo &quot; =================== 关闭 hadoop 集群 ===================&quot;<br>    echo &quot; --------------- 关闭 historyserver ---------------&quot;<br>    ssh hadoop102 &quot;/opt/module/hadoop-3.1.3/bin/mapred --daemon stop historyserver&quot;<br>    echo &quot; --------------- 关闭 yarn ---------------&quot;<br>    ssh hadoop103 &quot;/opt/module/hadoop-3.1.3/sbin/stop-yarn.sh&quot;<br>    echo &quot; --------------- 关闭 hdfs ---------------&quot;<br>    ssh hadoop102 &quot;/opt/module/hadoop-3.1.3/sbin/stop-dfs.sh&quot;<br>;;<br>*)<br>    echo &quot;Input Args Error...&quot;<br>;;<br>esac<br></code></pre></td></tr></table></figure><h4 id="jpsall"><a href="#jpsall" class="headerlink" title="jpsall"></a>jpsall</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">!/bin/bash</span><br>for host in hadoop102 hadoop103 hadoop104<br>do<br>    echo =============== $host ===============<br>    ssh $host jps<br>done<br></code></pre></td></tr></table></figure><h4 id="其他问题"><a href="#其他问题" class="headerlink" title="其他问题"></a>其他问题</h4><h5 id="误删除用户文件"><a href="#误删除用户文件" class="headerlink" title="误删除用户文件"></a>误删除用户文件</h5><p>比如我就不小心删掉了给我的那台服务器的/root里的所有东西（我真憨憨），重启之后没有那个[xxx@xxx]，变成bash了，那就输入这个：<br><code>-bash-4.2# cp -a /etc/skel/. /root</code><br>（<code>-a</code>是含隐藏文件，<code>/etc/skel/</code>是保命数据，后面的<code>.</code>别忘了，空格后接误删的目录，比如<code>/home/izayoiaster</code>）<br>弄好了可以<code>ls -a</code>检查一下，看看多没多几个bash，之后reboot一下就行了<br>（这都能弄好，牛逼）</p><h5 id="Hadoop找不到Java"><a href="#Hadoop找不到Java" class="headerlink" title="Hadoop找不到Java"></a>Hadoop找不到Java</h5><p>比如在给我的那台服务器上，照着教程配置好之后hadoop会报错：<br><code>ERROR: JAVA_HOME /opt/jdk/jdk1.8.0_144 does not exist.</code><br>照着网上，手动配置了一下hadoop-3.1.3/etc/hadoop/hadoop-env.sh，加了一句<br><code>export JAVA_HOME=/opt/module/jdk1.8.0_212</code><br>就好使啦！</p><h5 id="启动hadoop时报错"><a href="#启动hadoop时报错" class="headerlink" title="启动hadoop时报错"></a>启动hadoop时报错</h5><h6 id="case-1"><a href="#case-1" class="headerlink" title="case 1"></a>case 1</h6><p><code>nodemanager is running as process xxxx. Stop it first.</code><br>先stop-all.sh下，然后再start</p><h6 id="case-2"><a href="#case-2" class="headerlink" title="case 2"></a>case 2</h6><p><code>Hadoop ERROR: but there is no HDFS_NAMENODE_USER defined. Aborting operation. Starting datanodes</code><br>使用root配置的hadoop并启动会出现报错</p><p>方法：</p><p>1、对于start-dfs.sh和stop-dfs.sh文件，添加下列参数：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">!/usr/bin/env bash</span><br>HDFS_DATANODE_USER=root<br>HADOOP_SECURE_DN_USER=hdfs<br>HDFS_NAMENODE_USER=root<br>HDFS_SECONDARYNAMENODE_USER=root<br></code></pre></td></tr></table></figure><p>2、对于start-yarn.sh和stop-yarn.sh文件，添加下列参数：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash">!/usr/bin/env bash</span><br>YARN_RESOURCEMANAGER_USER=root<br>HADOOP_SECURE_DN_USER=yarn<br>YARN_NODEMANAGER_USER=root<br></code></pre></td></tr></table></figure><h5 id="无法访问Hadoop"><a href="#无法访问Hadoop" class="headerlink" title="无法访问Hadoop"></a>无法访问Hadoop</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 如果是通过公网IP访问阿里云上内网搭建的集群 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">property</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>dfs.client.use.datanode.hostname<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">description</span>&gt;</span>only cofig in clients<span class="hljs-tag">&lt;/<span class="hljs-name">description</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">property</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Hadoop</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>紫菀的第零篇博客</title>
    <link href="/2021/03/13/%E7%B4%AB%E8%8F%80%E7%9A%84%E7%AC%AC%E9%9B%B6%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
    <url>/2021/03/13/%E7%B4%AB%E8%8F%80%E7%9A%84%E7%AC%AC%E9%9B%B6%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<p>为什么是第零篇呢？因为算是一个全新开始吧</p><p>昨天受DH启发，去咨询了一下LCS，没想到直接就进了LCS的实验室？！研究方向是大数据，目前交给我的任务是搭建一个Hadoop</p><p>既是大数据，又是Java，好耶！<br>十六夜紫菀，冲冲冲💪</p><p>另外，虽然咨询哈深的学长说，ACM能搞就搞，但是结合我自身的竞赛体会以及知乎上众多回答，我还是决定不打ACM了 <em>（当然，算法课肯定是要上的，算法题也不能停下来）</em>。ACM这个东西，实在是<strong>热爱 &gt; 价值</strong>，知乎上有个人说得好，如果搞ACM是打算拿来保研的话，性价比是很低的，有这个时间不如搞好学习、做做项目，对以后更有帮助。</p><p>我这个人，数学思维显然是不太行的，况且ACM就算再努力，最后也有可能因为各种原因付诸东流。比起思考型，我更喜欢实验室这种研究型的，能让我享受学习新东西的快感 <em>（也不是说不思考啦，只是方向不太一样）</em></p><p>向着紫菀花开的明天，冲🦆！<br>（此处引用上一篇博客里制定的计划）</p>]]></content>
    
    
    
    <tags>
      
      <tag>紫菀</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>紫菀的第一篇博客</title>
    <link href="/2021/03/12/%E7%B4%AB%E8%8F%80%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
    <url>/2021/03/12/%E7%B4%AB%E8%8F%80%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h4 id="一些闲话："><a href="#一些闲话：" class="headerlink" title="一些闲话："></a>一些闲话：</h4><p>之前参加冰峰实验室的纳新，因为大一年度项目是微信小程序（实际上路子在这一步就走错了，我应该更有主见一点不应该顺着老师的意思），就想着要是加入实验室的微信小程序纳新方向，岂不是一石二鸟。</p><p>不过脑子一热上了贼船，做了好几次纳新作业之后，我才逐渐回过神来————首先我这个人对微信有一种说不上来的讨厌；其次，微信小程序被腾讯限制了生态，很多学到的东西只能用在微信上，学这玩意儿太亏了；最后，我虽然还没定好大方向，但是以后肯定是要主打至少Java/C++/Python三大语言之一的，到时候简历上的项目经历自然也是这几个方向的为好，微信小程序封闭不说，就算把它强行算到web前端，那也是个小项目，综合来看最有用的实验室还是安卓方向。</p><p>再者，塞翁失马焉知非福，虽然寒假捣鼓这几次微信作业，看起来是白费时间了（其实的确是吧……），不过起码大一年度项目做起来轻松多了（而且虽说之前我说我应该立项时更有主见一些，不过这个年度项目的确最适合用微信小程序来做），目前为止学的也充其量是个皮毛而已，大部分还是传统的HTML/CSS/JS，对于我写博客肯定是有用的。</p><p>那么，福是啥呢。记得之前刚开学晚上弹吉他时一位研究生学长很认真地告诉我大一一定要好好学习，坦白来讲，我大一也就中后期好好学习了，前期真是我都不忍直视……这学期是时候给自己创造<strong>福</strong>了。再一想，其实之前也有很多声音建议大一不要加入实验室，好好学习来着（不然，实验室纳新明明不难，为什么每次都有很多大二的参加）</p><h4 id="Plans："><a href="#Plans：" class="headerlink" title="Plans："></a>Plans：</h4><ol><li>期末学分绩达到级部<strong>前16</strong><ul><li>作业不拖延，认真完成；</li><li>上课不看一眼手机，就算觉得简单，也要听</li><li>万一，万一，出现了落课，<strong>绝对要立刻补上</strong></li></ul></li><li>六级高分考过<ul><li>每天30个六级单词，雷打不动</li><li>至少刷6套六级真题</li></ul></li><li>每天列好计划<ul><li>不论学习、生活还是宿舍的环境都要有条理</li></ul></li><li>学习Java<ul><li>看《Java核心技术卷一》</li><li>视情况而定，不求看完，但看的部分一定不能马虎，样例敲一遍</li></ul></li></ol><p><strong>最终目标：哈尔滨工业大学（深圳）</strong></p><p>很难，但如果不考好，怎么能有自由选择的权力<br>目前意向发展方向：</p><ul><li>人工智能</li><li>大数据</li><li>云计算</li><li>算法</li><li>引擎（游戏）</li></ul><p>微信呢，学就学了，毕竟年轻的一大资本就是不怕重来嘛；Java作为学校的课程，在大数据云计算和游戏等方面也都有很强的应用，还是目前需求量最大的语言，研究研究Java肯定是错不了的</p><p>2021/3/12</p><p>嗨呀，纠结啊……昨天给冰峰微信的学长发邮件之后，学长也回复我了</p><details><summary>具体回复</summary><p>同学你好，你的邮件我们已经收到，是这样的，微信小程序他只是一个起点而已，仅此而已，说实话只学微信小程序将来是不好找工作的，但是你从微信小程序中学到的不仅仅是一些相关的技术，作为一个软件工程专业的学生，技术仅仅只是一部分而已，我们专业的学生很少能够吃技术饭吃一辈子的，将来肯定是要转管理层或者啥的，我从邮件中得知你的方向是算法人工智能之类的，这个主要还是研究生阶段的主要深入的方向，本科阶段这些是指皮毛性的说一说，不会深究。回到微信小程序，其一，不论是微信还是安卓还是前端后端，在实验室只是一个开始，一个萌芽阶段。在实验室的项目中，不仅能够锻炼你的技术，最重要的是能够锻炼你的业务能力，以及对软件工程这门学科的了解。开发软件的整个流程你会有一个大体的认识，从最初产品经理给出原型，前端绘制页面，于此同时后端也在写接口，然后前后端对接，最后测试，发布，然后后期的维护，你都能经历到。不只是微信，安卓 IOS web前端等开发流程都是这样的，虽然可能微信小程序在你以后的工作中用不到，但是这些开发经验一定会在你以后的开发中发挥中要作用。按照我的理解本科阶段工程性的东西还是比算法性的东西要重要一点，但也缺乏本科阶段算法也很牛的人。其次就是你学习了微信小程序他有一个好处就是，你再转别的方向就比较轻松，web 前端 后端都可以，你在开发过程中也会了解到后端的部分知识，一些业务逻辑。很好的一个案例就是我们实验室微信小程序组的陈笑宇学长，去年就拿到美团的offer,而且是美团后端的offer。我自己在学习之余也会了解一些web前端的框架，比如vue以及，这些方向的学习都是非常相似的。其三，实验室给你的是一个学习环境，实验室中有很多技术很牛的人，我大一进来时是一个小白，我高中从来没参加过什么关于计算机的比赛，大学才开始接触这部分的知识，说实在的，大一上学期结束我什么都不懂，也就学了个C语言，加入实验室后才知道有很多方向，很多知识可以学，才知道了什么前端后端，什么是vue，什么是springBoot，开阔了自己的视野，受周围人的影响，自己对这些方向也就感兴趣了，自己就会找一些视频观看，学习这方面的内容，不明白的话问一问实验室的其他同学也就明白了，知识面广了，能力也就提升了。实验室不能说能给你一个完美的大学生活，我觉得至少能够给你的大学生活打个90分吧。<br><br>原信：<br>其实我已经纠结了好久选择微信小程序方向是不是正确的……说来惭愧，一开始选择微信小程序方向只是因为导师分配的大一年度项目正好也是微信小程序，就想着学微信小程序一箭双雕岂不美哉，选择了微信方向。但我后来想了很久，不论是我将来期望的职业范围还是我感兴趣的研究方向，都和微信小程序没有太大联系（当然我只是个啥也不懂的大一新生，所以理解很可能有偏差，我目前想要发展的方向主要是算法、引擎、人工智能这种，是不是需要主攻Java C++这些……）而且说实在的，加实验室一方面是为了提升能力，一方面是也为了丰富自己的项目经历，我感觉如果做微信小程序项目好像不能成为我以后的方向上有用的项目经历，微信小程序的被腾讯局限起来的生态学起来也感觉好亏……所以我还是决定不参加微信小程序纳新了，虽然我明明还没被冰峰录取却还发封邮件来说明自己不参加，或多或少会显得很内啥，但学长这么多天来认真看了我的作业并给出了建议，我也是应该写封邮件的。实在实在是非常抱歉！如果我的理解不对的话，还请学长告知一下，我还会考虑加入的</p></details><p>怎么说呢，我觉得有点道理，但又不是很能打动我……</p><p>刚才加了一个考研哈深的学长咨询了一下（学长好冷漠555），学长说ACM能参加的话一定要参加，比项目啥的有用多了，那我觉得吧，还是不参加实验室，或者摸个鱼就好。</p><p>总之面试还是去看看吧，再问问实验室学长的意见。</p>]]></content>
    
    
    
    <tags>
      
      <tag>紫菀</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/03/11/hello-world/"/>
    <url>/2021/03/11/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
